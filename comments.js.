// Create web server
const express = require('express');
const bodyParser = require('body-parser');
const { randomBytes } = require('crypto');
const axios = require('axios');

// Create web server
const app = express();
app.use(bodyParser.json());

const commentsByPostId = {};

// Get all comments for a post
app.get('/posts/:id/comments', (req, res) => {
  res.send(commentsByPostId[req.params.id] || []);
});

// Create a comment for a post
app.post('/posts/:id/comments', async (req, res) => {
  const commentId = randomBytes(4).toString('hex');
  const { content } = req.body;

  // Get comments for the post
  const comments = commentsByPostId[req.params.id] || [];

  // Add new comment to the post
  comments.push({ id: commentId, content, status: 'pending' });

  // Update comments for the post
  commentsByPostId[req.params.id] = comments;

  // Emit event to event bus
  await axios.post('http://event-bus-srv:4005/events', {
    type: 'CommentCreated',
    data: {
      id: commentId,
      content,
      postId: req.params.id,
      status: 'pending'
    }
  });

  res.status(201).send(comments);
});

// Receive events from event bus
app.post('/events', async (req, res) => {
  const { type, data } = req.body;

  if (type === 'CommentModerated') {
    const { id, postId, status } = data;

    // Get comments for the post
    const comments = commentsByPostId[postId] || [];

    // Find the comment by id
    const comment = comments.find(c => c.id === id);

    // Update comment status
    comment.status = status;

    // Emit event to event bus
    await axios.post('http://event-bus-srv:4005/events', {
      type: 'CommentUpdated',
      data: { ...comment, postId }
    });
  }

  res.send({});
});

// Start web server
app.listen(4001, () => {
  console.log('Comments service listening on port 4001');
});
